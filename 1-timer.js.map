{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\"\nimport \"flatpickr/dist/flatpickr.min.css\"\nimport iziToast from \"izitoast\"\nimport \"izitoast/dist/css/iziToast.min.css\"\nconst picker = document.querySelector(\"#datetime-picker\"),\n\tstartButton = document.querySelector(\"button[data-start]\"),\n\tdaysElement = document.querySelector(\"span[data-days]\"),\n\thoursElement = document.querySelector(\"span[data-hours]\"),\n\tminutesElement = document.querySelector(\"span[data-minutes]\"),\n\tsecondsElement = document.querySelector(\"span[data-seconds]\")\nconst convertMs = ms => {\n\tconst second = 1000\n\tconst minute = second * 60\n\tconst hour = minute * 60\n\tconst day = hour * 24\n\n\tconst days = Math.floor(ms / day)\n\tconst hours = Math.floor((ms % day) / hour)\n\tconst minutes = Math.floor(((ms % day) % hour) / minute)\n\tconst seconds = Math.floor((((ms % day) % hour) % minute) / second)\n\n\treturn { days, hours, minutes, seconds }\n}\nconst counter = date => {\n\tif (timeStarted) return\n\tif (date - new Date() < 1) {\n\t\tiziToast.error({\n\t\t\ttitle: \"Error\",\n\t\t\tmessage: \"Illegal operation\",\n\t\t})\n\t\treturn\n\t}\n\ttimeStarted = true\n\tpicker.disabled = true\n\tstartButton.disabled = true\n\tconst interval = setInterval(() => {\n\t\tconst now = date - new Date()\n\t\tif (now < 1) {\n\t\t\tclearInterval(interval)\n\t\t\ttimeStarted = false\n\t\t\tpicker.disabled = false\n\t\t\tiziToast.success({\n\t\t\t\ttitle: \"Hey\",\n\t\t\t\tmessage: \"Your timer has ran out of time, now you can start a new one!\",\n\t\t\t})\n\t\t} else {\n\t\t\tconst { days, hours, minutes, seconds } = convertMs(now)\n\t\t\tdaysElement.textContent = days.toString().padStart(2, 0)\n\t\t\thoursElement.textContent = hours.toString().padStart(2, 0)\n\t\t\tminutesElement.textContent = minutes.toString().padStart(2, 0)\n\t\t\tsecondsElement.textContent = seconds.toString().padStart(2, 0)\n\t\t}\n\t}, 1000)\n}\nconst options = {\n\tenableTime: true,\n\ttime_24hr: true,\n\tdefaultDate: new Date(),\n\tminuteIncrement: 1,\n\tonClose(selectedDates) {\n\t\tcurrentDate = selectedDates[0]\n\t\tstartButton.disabled = currentDate - new Date() < 1\n\t},\n}\nconst flatpicker = flatpickr(\"#datetime-picker\", options)\nlet currentDate = flatpicker.config.now\nlet timeStarted = false\nstartButton.addEventListener(\"click\", () => counter(currentDate))\n"],"names":["picker","startButton","daysElement","hoursElement","minutesElement","secondsElement","convertMs","ms","days","hours","minutes","seconds","counter","date","timeStarted","iziToast","interval","now","options","selectedDates","currentDate","flatpicker","flatpickr"],"mappings":"2GAIA,MAAMA,EAAS,SAAS,cAAc,kBAAkB,EACvDC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAc,SAAS,cAAc,iBAAiB,EACtDC,EAAe,SAAS,cAAc,kBAAkB,EACxDC,EAAiB,SAAS,cAAc,oBAAoB,EAC5DC,EAAiB,SAAS,cAAc,oBAAoB,EACvDC,EAAYC,GAAM,CAMvB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,CACzC,EACMC,EAAUC,GAAQ,CACvB,GAAIC,EAAa,OACjB,GAAID,EAAO,IAAI,KAAS,EAAG,CAC1BE,EAAS,MAAM,CACd,MAAO,QACP,QAAS,mBACZ,CAAG,EACD,MACA,CACDD,EAAc,GACdd,EAAO,SAAW,GAClBC,EAAY,SAAW,GACvB,MAAMe,EAAW,YAAY,IAAM,CAClC,MAAMC,EAAMJ,EAAO,IAAI,KACvB,GAAII,EAAM,EACT,cAAcD,CAAQ,EACtBF,EAAc,GACdd,EAAO,SAAW,GAClBe,EAAS,QAAQ,CAChB,MAAO,MACP,QAAS,8DACb,CAAI,MACK,CACN,KAAM,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EAAUW,CAAG,EACvDf,EAAY,YAAcM,EAAK,SAAU,EAAC,SAAS,EAAG,CAAC,EACvDL,EAAa,YAAcM,EAAM,SAAU,EAAC,SAAS,EAAG,CAAC,EACzDL,EAAe,YAAcM,EAAQ,SAAU,EAAC,SAAS,EAAG,CAAC,EAC7DL,EAAe,YAAcM,EAAQ,SAAU,EAAC,SAAS,EAAG,CAAC,CAC7D,CACD,EAAE,GAAI,CACR,EACMO,EAAU,CACf,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACtBC,EAAcD,EAAc,CAAC,EAC7BlB,EAAY,SAAWmB,EAAc,IAAI,KAAS,CAClD,CACF,EACMC,EAAaC,EAAU,mBAAoBJ,CAAO,EACxD,IAAIE,EAAcC,EAAW,OAAO,IAChCP,EAAc,GAClBb,EAAY,iBAAiB,QAAS,IAAMW,EAAQQ,CAAW,CAAC"}